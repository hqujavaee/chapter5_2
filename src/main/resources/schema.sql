drop table if exists hquer;
drop table if exists user;
drop table if exists message;
drop table if exists user_authority;
create table hquer (
  username varchar(25) not null,
  firstname varchar(25) not null,
  lastname varchar(25)  not null,
  email varchar(50) not null,
  password varchar(25) not null
);

create table message (
  id integer identity primary key,
  username varchar(25) not null,
  message varchar(2000) not null,
  postedTime datetime not null,
  foreign key(username) references hquer(username)
);

create table user (
  id bigint(20) NOT NULL AUTO_INCREMENT,
  username varchar(20) NOT NULL,
  password varchar(100) NOT NULL,
  name varchar(20) NOT NULL,
  email varchar(50) NOT NULL,
  avatar varchar(200) DEFAULT NULL,
  create_time datetime DEFAULT NULL,
  last_login_time datetime DEFAULT NULL,
  status varchar(10) DEFAULT NULL,
  PRIMARY KEY (id),
);

create table authority (
  id bigint(20) NOT NULL AUTO_INCREMENT,
  name varchar(255) NOT NULL,
  PRIMARY KEY (id)
);


create table user_authority (
  user_id bigint(20) NOT NULL,
  authority_id bigint(20) NOT NULL,
  );

--create unique index ix_auth_username on authorities (username,authority);
--create table groups (
--    id bigint generated by default as identity(start with 0) primary key,
--    group_name varchar(256) not null
--);
--
--create table group_authorities (
--    group_id bigint not null,
--    authority varchar(50) not null,
--    constraint fk_group_authorities_group foreign key(group_id) references groups(id)
--);
--
--create table group_members (
--    id bigint generated by default as identity(start with 0) primary key,
--    username varchar(50) not null,
--    group_id bigint not null,
--    constraint fk_group_members_group foreign key(group_id) references groups(id)
--);
